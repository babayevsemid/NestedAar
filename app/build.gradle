plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'maven-publish'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.codescanner"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'com.semid.qrcodescanner' //You can either define these here or get them from project conf elsewhere
            artifactId 'codeScanner'
            version '1.0'
            artifact "$buildDir/outputs/aar/app-debug.aar" //aar artifact you want to publish

            //generate pom nodes for dependencies
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.compile.allDependencies.each { dependency ->
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', dependency.group)
                    dependencyNode.appendNode('artifactId', dependency.name)
                    dependencyNode.appendNode('version', dependency.version)
                }
            }
        }
    }

    //publish to filesystem repo
    repositories{
        maven {
            url "$buildDir/repo"
        }
    }
}

//afterEvaluate {
//    publishing {
//        publications {
//            release(MavenPublication) {
//                groupId = 'com.semid.qrcodescanner'
//                artifactId = 'codeScanner'
//                version = '1.0'
//            }
//        }
//    }
//}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation files('libs/codeScanner.aar')

    implementation 'com.github.babayevsemid:FileChooser:1.5.2'

    //required
    implementation "androidx.activity:activity-ktx:1.4.0"
    implementation "androidx.fragment:fragment-ktx:1.4.1"


// Barcode model dependencies
    implementation 'com.google.mlkit:barcode-scanning:17.0.2'

// CameraX dependencies
    implementation "androidx.camera:camera-camera2:1.1.0-beta02"
    implementation "androidx.camera:camera-lifecycle:1.1.0-beta02"
    implementation "androidx.camera:camera-view:1.1.0-beta02"
}